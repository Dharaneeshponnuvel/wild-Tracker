{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charan\\\\Downloads\\\\demo\\\\demo\\\\my-react-app\\\\src\\\\components\\\\PostPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './post.css'; // Optional: For styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const [animal, setAnimal] = useState({\n    name: '',\n    description: ''\n  });\n  const [image, setImage] = useState(null);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAnimal(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleImageUpload = e => {\n    setImage(e.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    if (!animal.name || !animal.description || !image) {\n      alert('All fields are required.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', animal.name);\n    formData.append('description', animal.description);\n    formData.append('image', image);\n    try {\n      const response = await axios.post('http://localhost:5000/api/animals', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Animal added successfully!');\n      setAnimal({\n        name: '',\n        description: ''\n      });\n      setImage(null);\n    } catch (error) {\n      console.error('Error adding animal:', error);\n      alert('Failed to add animal.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Animal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Animal Name\",\n        value: animal.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Animal Description\",\n        value: animal.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"SDA2DofYk29g0YI6JsFdDyG32ok=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Post","_s","animal","setAnimal","name","description","image","setImage","handleChange","e","value","target","prev","handleImageUpload","files","handleSubmit","alert","formData","FormData","append","response","post","headers","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Charan/Downloads/demo/demo/my-react-app/src/components/PostPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './post.css'; // Optional: For styling\r\n\r\nconst Post = () => {\r\n    const [animal, setAnimal] = useState({ name: '', description: '' });\r\n    const [image, setImage] = useState(null);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setAnimal((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleImageUpload = (e) => {\r\n        setImage(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!animal.name || !animal.description || !image) {\r\n            alert('All fields are required.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', animal.name);\r\n        formData.append('description', animal.description);\r\n        formData.append('image', image);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/animals', formData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' },\r\n            });\r\n            alert('Animal added successfully!');\r\n            setAnimal({ name: '', description: '' });\r\n            setImage(null);\r\n        } catch (error) {\r\n            console.error('Error adding animal:', error);\r\n            alert('Failed to add animal.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"post-page\">\r\n            <h2>Add New Animal</h2>\r\n            <div className=\"post-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Animal Name\"\r\n                    value={animal.name}\r\n                    onChange={handleChange}\r\n                />\r\n                <textarea\r\n                    name=\"description\"\r\n                    placeholder=\"Animal Description\"\r\n                    value={animal.description}\r\n                    onChange={handleChange}\r\n                />\r\n                <input type=\"file\" onChange={handleImageUpload} />\r\n                <button onClick={handleSubmit}>Submit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}