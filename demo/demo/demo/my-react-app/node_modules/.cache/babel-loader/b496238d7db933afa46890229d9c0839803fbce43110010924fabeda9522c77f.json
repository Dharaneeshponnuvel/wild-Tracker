{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charan\\\\Downloads\\\\demo\\\\demo\\\\my-react-app\\\\src\\\\components\\\\Viewpost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PostViewPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostViewPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [currentComment, setCurrentComment] = useState({});\n\n  // Fetch posts from the backend\n  useEffect(() => {\n    fetch('http://localhost:5000/api/posts') // Backend API URL\n    .then(res => res.json()).then(data => setPosts(data)).catch(err => console.error(err));\n  }, []);\n\n  // Handle like button click\n  const handleLike = postId => {\n    fetch(`http://localhost:5000/api/posts/${postId}/like`, {\n      method: 'POST'\n    }).then(res => res.json()).then(updatedPost => {\n      setPosts(prevPosts => prevPosts.map(post => post._id === postId ? {\n        ...post,\n        likes_count: updatedPost.likes\n      } : post));\n    }).catch(err => console.error(err));\n  };\n\n  // Handle adding a comment\n  const handleAddComment = postId => {\n    const comment = currentComment[postId] || '';\n    if (!comment.trim()) return;\n    fetch(`http://localhost:5000/api/posts/${postId}/comment`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: 'currentUser',\n        comment\n      })\n    }).then(res => res.json()).then(newComment => {\n      setPosts(prevPosts => prevPosts.map(post => post._id === postId ? {\n        ...post,\n        comments: [...post.comments, newComment]\n      } : post));\n      setCurrentComment({\n        ...currentComment,\n        [postId]: ''\n      }); // Clear input for that post\n    }).catch(err => console.error(err));\n  };\n\n  // Handle comment input change for individual posts\n  const handleCommentInput = (postId, value) => {\n    setCurrentComment({\n      ...currentComment,\n      [postId]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-view-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/jpeg;base64,${post.image}` // Display Base64 image\n        ,\n        alt: post.description,\n        className: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 32\n          }, this), \" \", post.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 32\n          }, this), \" \", post.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLike(post._id),\n          children: [\"\\u2764\\uFE0F \", post.likes_count, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a comment\",\n            value: currentComment[post._id] || '',\n            onChange: e => handleCommentInput(post._id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddComment(post._id),\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), post.comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }, this) : post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [comment.user, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 41\n          }, this), \" \", comment.comment]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(PostViewPage, \"1RAr8RmsW6l/Bj8lySynjC7VS3s=\");\n_c = PostViewPage;\nexport default PostViewPage;\nvar _c;\n$RefreshReg$(_c, \"PostViewPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PostViewPage","_s","posts","setPosts","newComment","setNewComment","currentComment","setCurrentComment","fetch","then","res","json","data","catch","err","console","error","handleLike","postId","method","updatedPost","prevPosts","map","post","_id","likes_count","likes","handleAddComment","comment","trim","headers","body","JSON","stringify","username","comments","handleCommentInput","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","src","image","alt","description","location","onClick","type","placeholder","onChange","e","target","index","user","_c","$RefreshReg$"],"sources":["C:/Users/Charan/Downloads/demo/demo/my-react-app/src/components/Viewpost.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PostViewPage.css';\r\n\r\nconst PostViewPage = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [currentComment, setCurrentComment] = useState({});\r\n\r\n    // Fetch posts from the backend\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/posts') // Backend API URL\r\n            .then((res) => res.json())\r\n            .then((data) => setPosts(data))\r\n            .catch((err) => console.error(err));\r\n    }, []);\r\n\r\n    // Handle like button click\r\n    const handleLike = (postId) => {\r\n        fetch(`http://localhost:5000/api/posts/${postId}/like`, {\r\n            method: 'POST',\r\n        })\r\n            .then((res) => res.json())\r\n            .then((updatedPost) => {\r\n                setPosts((prevPosts) =>\r\n                    prevPosts.map((post) =>\r\n                        post._id === postId ? { ...post, likes_count: updatedPost.likes } : post\r\n                    )\r\n                );\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    // Handle adding a comment\r\n    const handleAddComment = (postId) => {\r\n        const comment = currentComment[postId] || '';\r\n        if (!comment.trim()) return;\r\n\r\n        fetch(`http://localhost:5000/api/posts/${postId}/comment`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username: 'currentUser', comment }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((newComment) => {\r\n                setPosts((prevPosts) =>\r\n                    prevPosts.map((post) =>\r\n                        post._id === postId\r\n                            ? { ...post, comments: [...post.comments, newComment] }\r\n                            : post\r\n                    )\r\n                );\r\n                setCurrentComment({ ...currentComment, [postId]: '' }); // Clear input for that post\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    // Handle comment input change for individual posts\r\n    const handleCommentInput = (postId, value) => {\r\n        setCurrentComment({ ...currentComment, [postId]: value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"post-view-page\">\r\n            <h1>Posts</h1>\r\n            {posts.length === 0 ? (\r\n                <p>Loading posts...</p>\r\n            ) : (\r\n                posts.map((post) => (\r\n                    <div key={post._id} className=\"post\">\r\n                        {/* Image */}\r\n                        <img\r\n                            src={`data:image/jpeg;base64,${post.image}`} // Display Base64 image\r\n                            alt={post.description}\r\n                            className=\"post-image\"\r\n                        />\r\n\r\n                        {/* Post Details */}\r\n                        <div className=\"post-details\">\r\n                            <p><strong>Description:</strong> {post.description}</p>\r\n                            <p><strong>Location:</strong> {post.location}</p>\r\n                        </div>\r\n\r\n                        {/* Actions */}\r\n                        <div className=\"post-actions\">\r\n                            {/* Like Button */}\r\n                            <button onClick={() => handleLike(post._id)}>\r\n                                ❤️ {post.likes_count} Likes\r\n                            </button>\r\n\r\n                            {/* Comment Section */}\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Add a comment\"\r\n                                    value={currentComment[post._id] || ''}\r\n                                    onChange={(e) =>\r\n                                        handleCommentInput(post._id, e.target.value)\r\n                                    }\r\n                                />\r\n                                <button onClick={() => handleAddComment(post._id)}>Comment</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Comments */}\r\n                        <div className=\"comments\">\r\n                            <h4>Comments:</h4>\r\n                            {post.comments.length === 0 ? (\r\n                                <p>No comments yet.</p>\r\n                            ) : (\r\n                                post.comments.map((comment, index) => (\r\n                                    <p key={index}>\r\n                                        <strong>{comment.user}:</strong> {comment.comment}\r\n                                    </p>\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostViewPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}