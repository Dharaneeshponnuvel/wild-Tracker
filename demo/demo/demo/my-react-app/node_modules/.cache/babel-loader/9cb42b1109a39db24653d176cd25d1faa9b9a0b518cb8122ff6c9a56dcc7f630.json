{"ast":null,"code":"var _jsxFileName = \"D:\\\\ag lab\\\\demo\\\\my-react-app\\\\src\\\\components\\\\MapPage.jsx\",\n  _s = $RefreshSig$();\n// components/MapPage.jsx\nimport React, { useEffect } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css'; // Include MapLibre CSS\nimport './MapPage.css';\n\n// Sample data for animal locations in India\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animalLocations = [{\n  id: 1,\n  name: \"Bengal Tiger\",\n  location: [79.4082, 21.2945],\n  description: \"Tadoba Andhari Tiger Reserve, Maharashtra\"\n}, {\n  id: 2,\n  name: \"Asian Elephant\",\n  location: [77.8809, 11.5860],\n  description: \"Mudumalai National Park, Tamil Nadu\"\n}, {\n  id: 3,\n  name: \"Indian Rhino\",\n  location: [93.3656, 26.0950],\n  description: \"Kaziranga National Park, Assam\"\n}, {\n  id: 4,\n  name: \"Snow Leopard\",\n  location: [78.7320, 32.6512],\n  description: \"Hemis National Park, Ladakh\"\n}, {\n  id: 5,\n  name: \"Great Indian Bustard\",\n  location: [70.7211, 26.0960],\n  description: \"Desert National Park, Rajasthan\"\n}];\nconst MapPage = () => {\n  _s();\n  useEffect(() => {\n    const map = new maplibregl.Map({\n      container: 'map',\n      // ID of the container\n      style: 'https://demotiles.maplibre.org/style.json',\n      // URL of the style\n      center: [78.9629, 20.5937],\n      // Center of the map (India)\n      zoom: 5 // Initial zoom level\n    });\n\n    // Add markers for each animal location\n    animalLocations.forEach(animal => {\n      const marker = new maplibregl.Marker().setLngLat(animal.location).setPopup(new maplibregl.Popup().setHTML(`<strong>${animal.name}</strong><p>${animal.description}</p>`)) // Popup with animal name and description\n      .addTo(map);\n    });\n    return () => map.remove(); // Cleanup on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '100vh',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","maplibregl","jsxDEV","_jsxDEV","animalLocations","id","name","location","description","MapPage","_s","map","Map","container","style","center","zoom","forEach","animal","marker","Marker","setLngLat","setPopup","Popup","setHTML","addTo","remove","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ag lab/demo/my-react-app/src/components/MapPage.jsx"],"sourcesContent":["// components/MapPage.jsx\r\nimport React, { useEffect } from 'react';\r\nimport maplibregl from 'maplibre-gl';\r\nimport 'maplibre-gl/dist/maplibre-gl.css'; // Include MapLibre CSS\r\nimport './MapPage.css';\r\n\r\n// Sample data for animal locations in India\r\nconst animalLocations = [\r\n    { id: 1, name: \"Bengal Tiger\", location: [79.4082, 21.2945], description: \"Tadoba Andhari Tiger Reserve, Maharashtra\" },\r\n    { id: 2, name: \"Asian Elephant\", location: [77.8809, 11.5860], description: \"Mudumalai National Park, Tamil Nadu\" },\r\n    { id: 3, name: \"Indian Rhino\", location: [93.3656, 26.0950], description: \"Kaziranga National Park, Assam\" },\r\n    { id: 4, name: \"Snow Leopard\", location: [78.7320, 32.6512], description: \"Hemis National Park, Ladakh\" },\r\n    { id: 5, name: \"Great Indian Bustard\", location: [70.7211, 26.0960], description: \"Desert National Park, Rajasthan\" },\r\n];\r\n\r\nconst MapPage = () => {\r\n    useEffect(() => {\r\n        const map = new maplibregl.Map({\r\n            container: 'map', // ID of the container\r\n            style: 'https://demotiles.maplibre.org/style.json', // URL of the style\r\n            center: [78.9629, 20.5937], // Center of the map (India)\r\n            zoom: 5, // Initial zoom level\r\n        });\r\n\r\n        // Add markers for each animal location\r\n        animalLocations.forEach(animal => {\r\n            const marker = new maplibregl.Marker()\r\n                .setLngLat(animal.location)\r\n                .setPopup(new maplibregl.Popup().setHTML(`<strong>${animal.name}</strong><p>${animal.description}</p>`)) // Popup with animal name and description\r\n                .addTo(map);\r\n        });\r\n\r\n        return () => map.remove(); // Cleanup on component unmount\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"map\" style={{ height: '100vh', width: '100%' }} />\r\n    );\r\n};\r\n\r\nexport default MapPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,kCAAkC,CAAC,CAAC;AAC3C,OAAO,eAAe;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAG,CACpB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,QAAQ,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;EAAEC,WAAW,EAAE;AAA4C,CAAC,EACvH;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,QAAQ,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;EAAEC,WAAW,EAAE;AAAsC,CAAC,EACnH;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,QAAQ,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;EAAEC,WAAW,EAAE;AAAiC,CAAC,EAC5G;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,QAAQ,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;EAAEC,WAAW,EAAE;AAA8B,CAAC,EACzG;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,sBAAsB;EAAEC,QAAQ,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;EAAEC,WAAW,EAAE;AAAkC,CAAC,CACxH;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClBV,SAAS,CAAC,MAAM;IACZ,MAAMW,GAAG,GAAG,IAAIV,UAAU,CAACW,GAAG,CAAC;MAC3BC,SAAS,EAAE,KAAK;MAAE;MAClBC,KAAK,EAAE,2CAA2C;MAAE;MACpDC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MAAE;MAC5BC,IAAI,EAAE,CAAC,CAAE;IACb,CAAC,CAAC;;IAEF;IACAZ,eAAe,CAACa,OAAO,CAACC,MAAM,IAAI;MAC9B,MAAMC,MAAM,GAAG,IAAIlB,UAAU,CAACmB,MAAM,CAAC,CAAC,CACjCC,SAAS,CAACH,MAAM,CAACX,QAAQ,CAAC,CAC1Be,QAAQ,CAAC,IAAIrB,UAAU,CAACsB,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,WAAWN,MAAM,CAACZ,IAAI,eAAeY,MAAM,CAACV,WAAW,MAAM,CAAC,CAAC,CAAC;MAAA,CACxGiB,KAAK,CAACd,GAAG,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,MAAMA,GAAG,CAACe,MAAM,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIvB,OAAA;IAAKE,EAAE,EAAC,KAAK;IAACS,KAAK,EAAE;MAAEa,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEnE,CAAC;AAACtB,EAAA,CAvBID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}