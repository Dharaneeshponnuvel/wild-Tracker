{"ast":null,"code":"var _jsxFileName = \"D:\\\\ag lab\\\\demo\\\\my-react-app\\\\src\\\\components\\\\MapPage.jsx\",\n  _s = $RefreshSig$();\n// components/MapPage.jsx\nimport React, { useEffect } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css'; // Include MapLibre CSS\nimport './MapPage.css';\n\n// Sample data for animal locations (worldwide)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animalLocations = [{\n  name: \"Bengal Tiger\",\n  coordinates: [79.4082, 21.2945],\n  // Tadoba Andhari Tiger Reserve, India\n  imageUrl: 'https://example.com/bengal-tiger.jpg' // Replace with actual image URL\n}, {\n  name: \"Asian Elephant\",\n  coordinates: [77.8809, 11.5860],\n  // Mudumalai National Park, India\n  imageUrl: 'https://example.com/asian-elephant.jpg' // Replace with actual image URL\n}, {\n  name: \"Indian Rhino\",\n  coordinates: [93.3656, 26.0950],\n  // Kaziranga National Park, India\n  imageUrl: 'https://example.com/indian-rhino.jpg' // Replace with actual image URL\n}, {\n  name: \"Snow Leopard\",\n  coordinates: [78.7320, 32.6512],\n  // Hemis National Park, India\n  imageUrl: 'https://example.com/snow-leopard.jpg' // Replace with actual image URL\n}, {\n  name: \"Great Indian Bustard\",\n  coordinates: [70.7211, 26.0960],\n  // Desert National Park, India\n  imageUrl: 'https://example.com/great-indian-bustard.jpg' // Replace with actual image URL\n}, {\n  name: \"African Lion\",\n  coordinates: [36.8219, -1.2864],\n  // Nairobi National Park, Kenya\n  imageUrl: 'https://example.com/african-lion.jpg' // Replace with actual image URL\n}, {\n  name: \"Polar Bear\",\n  coordinates: [-102.0377, 71.2953],\n  // Wapusk National Park, Canada\n  imageUrl: 'https://example.com/polar-bear.jpg' // Replace with actual image URL\n}, {\n  name: \"Giant Panda\",\n  coordinates: [102.0328, 30.6634],\n  // Wolong National Nature Reserve, China\n  imageUrl: 'https://example.com/giant-panda.jpg' // Replace with actual image URL\n}, {\n  name: \"Snowy Owl\",\n  coordinates: [-84.3895, 43.3164],\n  // Canadian Arctic\n  imageUrl: 'https://example.com/snowy-owl.jpg' // Replace with actual image URL\n}, {\n  name: \"Red Kangaroo\",\n  coordinates: [145.9592, -25.3632],\n  // Australian Outback\n  imageUrl: 'https://example.com/red-kangaroo.jpg' // Replace with actual image URL\n}];\nconst MapPage = () => {\n  _s();\n  useEffect(() => {\n    const map = new maplibregl.Map({\n      container: 'map',\n      // ID of the container\n      style: 'https://demotiles.maplibre.org/style.json',\n      // URL of the style\n      center: [0, 20],\n      // Center of the map (global view)\n      zoom: 2 // Initial zoom level\n    });\n\n    // Add markers for each animal location\n    animalLocations.forEach(animal => {\n      const marker = new maplibregl.Marker().setLngLat(animal.coordinates).setPopup(new maplibregl.Popup().setHTML(`\n                    <div style=\"text-align: center;\">\n                        <strong>${animal.name}</strong><br />\n                        <img src=\"${animal.imageUrl}\" alt=\"${animal.name}\" style=\"width:100px;height:auto;\" /><br />\n                    </div>\n                `)) // Popup with animal name and image\n      .addTo(map);\n    });\n    return () => map.remove(); // Cleanup on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '100vh',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","maplibregl","jsxDEV","_jsxDEV","animalLocations","name","coordinates","imageUrl","MapPage","_s","map","Map","container","style","center","zoom","forEach","animal","marker","Marker","setLngLat","setPopup","Popup","setHTML","addTo","remove","id","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ag lab/demo/my-react-app/src/components/MapPage.jsx"],"sourcesContent":["// components/MapPage.jsx\r\nimport React, { useEffect } from 'react';\r\nimport maplibregl from 'maplibre-gl';\r\nimport 'maplibre-gl/dist/maplibre-gl.css'; // Include MapLibre CSS\r\nimport './MapPage.css';\r\n\r\n// Sample data for animal locations (worldwide)\r\nconst animalLocations = [\r\n    {\r\n        name: \"Bengal Tiger\",\r\n        coordinates: [79.4082, 21.2945], // Tadoba Andhari Tiger Reserve, India\r\n        imageUrl: 'https://example.com/bengal-tiger.jpg', // Replace with actual image URL\r\n    },\r\n    {\r\n        name: \"Asian Elephant\",\r\n        coordinates: [77.8809, 11.5860], // Mudumalai National Park, India\r\n        imageUrl: 'https://example.com/asian-elephant.jpg', // Replace with actual image URL\r\n    },\r\n    {\r\n        name: \"Indian Rhino\",\r\n        coordinates: [93.3656, 26.0950], // Kaziranga National Park, India\r\n        imageUrl: 'https://example.com/indian-rhino.jpg', // Replace with actual image URL\r\n    },\r\n    {\r\n        name: \"Snow Leopard\",\r\n        coordinates: [78.7320, 32.6512], // Hemis National Park, India\r\n        imageUrl: 'https://example.com/snow-leopard.jpg', // Replace with actual image URL\r\n    },\r\n    {\r\n        name: \"Great Indian Bustard\",\r\n        coordinates: [70.7211, 26.0960], // Desert National Park, India\r\n        imageUrl: 'https://example.com/great-indian-bustard.jpg', // Replace with actual image URL\r\n    },\r\n    {\r\n        name: \"African Lion\",\r\n        coordinates: [36.8219, -1.2864], // Nairobi National Park, Kenya\r\n        imageUrl: 'https://example.com/african-lion.jpg', // Replace with actual image URL\r\n    },\r\n    {\r\n        name: \"Polar Bear\",\r\n        coordinates: [-102.0377, 71.2953], // Wapusk National Park, Canada\r\n        imageUrl: 'https://example.com/polar-bear.jpg', // Replace with actual image URL\r\n    },\r\n    {\r\n        name: \"Giant Panda\",\r\n        coordinates: [102.0328, 30.6634], // Wolong National Nature Reserve, China\r\n        imageUrl: 'https://example.com/giant-panda.jpg', // Replace with actual image URL\r\n    },\r\n    {\r\n        name: \"Snowy Owl\",\r\n        coordinates: [-84.3895, 43.3164], // Canadian Arctic\r\n        imageUrl: 'https://example.com/snowy-owl.jpg', // Replace with actual image URL\r\n    },\r\n    {\r\n        name: \"Red Kangaroo\",\r\n        coordinates: [145.9592, -25.3632], // Australian Outback\r\n        imageUrl: 'https://example.com/red-kangaroo.jpg', // Replace with actual image URL\r\n    },\r\n];\r\n\r\nconst MapPage = () => {\r\n    useEffect(() => {\r\n        const map = new maplibregl.Map({\r\n            container: 'map', // ID of the container\r\n            style: 'https://demotiles.maplibre.org/style.json', // URL of the style\r\n            center: [0, 20], // Center of the map (global view)\r\n            zoom: 2, // Initial zoom level\r\n        });\r\n\r\n        // Add markers for each animal location\r\n        animalLocations.forEach(animal => {\r\n            const marker = new maplibregl.Marker()\r\n                .setLngLat(animal.coordinates)\r\n                .setPopup(new maplibregl.Popup().setHTML(`\r\n                    <div style=\"text-align: center;\">\r\n                        <strong>${animal.name}</strong><br />\r\n                        <img src=\"${animal.imageUrl}\" alt=\"${animal.name}\" style=\"width:100px;height:auto;\" /><br />\r\n                    </div>\r\n                `)) // Popup with animal name and image\r\n                .addTo(map);\r\n        });\r\n\r\n        return () => map.remove(); // Cleanup on component unmount\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"map\" style={{ height: '100vh', width: '100%' }} />\r\n    );\r\n};\r\n\r\nexport default MapPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}