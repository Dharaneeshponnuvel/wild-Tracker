{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charan\\\\Downloads\\\\demo\\\\demo\\\\my-react-app\\\\src\\\\components\\\\Viewpost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PostViewPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostViewPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentComment, setCurrentComment] = useState({});\n\n  // Fetch posts from the backend\n  useEffect(() => {\n    fetch('http://localhost:5000/api/posts') // Backend API URL\n    .then(res => res.json()).then(data => setPosts(data)).catch(err => console.error('Error fetching posts:', err));\n  }, []);\n\n  // Handle like button click\n  const handleLike = async postId => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/posts/${postId}/like`, {\n        method: 'POST'\n      });\n      const updatedPost = await res.json();\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        likes_count: updatedPost.likes\n      } : post));\n    } catch (err) {\n      console.error('Error liking post:', err);\n    }\n  };\n\n  // Handle adding a comment\n  const handleAddComment = async postId => {\n    const comment = currentComment[postId] || '';\n    if (!comment.trim()) return;\n    try {\n      const res = await fetch(`http://localhost:5000/api/posts/${postId}/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: 'currentUser',\n          comment\n        })\n      });\n      const newComment = await res.json();\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        comments: [...post.comments, newComment]\n      } : post));\n      setCurrentComment({\n        ...currentComment,\n        [postId]: ''\n      }); // Clear input for that post\n    } catch (err) {\n      console.error('Error adding comment:', err);\n    }\n  };\n\n  // Handle comment input change for individual posts\n  const handleCommentInput = (postId, value) => {\n    setCurrentComment({\n      ...currentComment,\n      [postId]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-view-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/${post.image_url}` // Ensure backend sends correct image URL\n        ,\n        alt: post.description,\n        className: \"post-image\",\n        onError: e => e.target.src = '/fallback-image.jpg' // Fallback for missing images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLike(post.id),\n          className: \"like-button\",\n          children: [\"\\u2764\\uFE0F \", post.likes_count, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a comment\",\n            value: currentComment[post.id] || '',\n            onChange: e => handleCommentInput(post.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddComment(post.id),\n            className: \"comment-button\",\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this), post.comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }, this) : post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 41\n          }, this), \": \", comment.comment]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 37\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(PostViewPage, \"USlit0Rb51wES8pAwF4kVVgVsZ4=\");\n_c = PostViewPage;\nexport default PostViewPage;\nvar _c;\n$RefreshReg$(_c, \"PostViewPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PostViewPage","_s","posts","setPosts","currentComment","setCurrentComment","fetch","then","res","json","data","catch","err","console","error","handleLike","postId","method","updatedPost","prevPosts","map","post","id","likes_count","likes","handleAddComment","comment","trim","headers","body","JSON","stringify","username","newComment","comments","handleCommentInput","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","src","image_url","alt","description","onError","e","target","location","onClick","type","placeholder","onChange","index","user","_c","$RefreshReg$"],"sources":["C:/Users/Charan/Downloads/demo/demo/my-react-app/src/components/Viewpost.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PostViewPage.css';\r\n\r\nconst PostViewPage = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [currentComment, setCurrentComment] = useState({});\r\n\r\n    // Fetch posts from the backend\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/posts') // Backend API URL\r\n            .then((res) => res.json())\r\n            .then((data) => setPosts(data))\r\n            .catch((err) => console.error('Error fetching posts:', err));\r\n    }, []);\r\n\r\n    // Handle like button click\r\n    const handleLike = async (postId) => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/api/posts/${postId}/like`, {\r\n                method: 'POST',\r\n            });\r\n            const updatedPost = await res.json();\r\n\r\n            setPosts((prevPosts) =>\r\n                prevPosts.map((post) =>\r\n                    post.id === postId ? { ...post, likes_count: updatedPost.likes } : post\r\n                )\r\n            );\r\n        } catch (err) {\r\n            console.error('Error liking post:', err);\r\n        }\r\n    };\r\n\r\n    // Handle adding a comment\r\n    const handleAddComment = async (postId) => {\r\n        const comment = currentComment[postId] || '';\r\n        if (!comment.trim()) return;\r\n\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/api/posts/${postId}/comment`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username: 'currentUser', comment }),\r\n            });\r\n            const newComment = await res.json();\r\n\r\n            setPosts((prevPosts) =>\r\n                prevPosts.map((post) =>\r\n                    post.id === postId\r\n                        ? { ...post, comments: [...post.comments, newComment] }\r\n                        : post\r\n                )\r\n            );\r\n            setCurrentComment({ ...currentComment, [postId]: '' }); // Clear input for that post\r\n        } catch (err) {\r\n            console.error('Error adding comment:', err);\r\n        }\r\n    };\r\n\r\n    // Handle comment input change for individual posts\r\n    const handleCommentInput = (postId, value) => {\r\n        setCurrentComment({ ...currentComment, [postId]: value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"post-view-page\">\r\n            <h1>Post Feed</h1>\r\n            {posts.length === 0 ? (\r\n                <p>Loading posts...</p>\r\n            ) : (\r\n                posts.map((post) => (\r\n                    <div key={post.id} className=\"post-card\">\r\n                        <img\r\n                            src={`http://localhost:5000/${post.image_url}`} // Ensure backend sends correct image URL\r\n                            alt={post.description}\r\n                            className=\"post-image\"\r\n                            onError={(e) => (e.target.src = '/fallback-image.jpg')} // Fallback for missing images\r\n                        />\r\n                        <div className=\"post-content\">\r\n                            <h3>Description:</h3>\r\n                            <p>{post.description}</p>\r\n                            <h4>Location:</h4>\r\n                            <p>{post.location}</p>\r\n                        </div>\r\n\r\n                        <div className=\"post-actions\">\r\n                            <button onClick={() => handleLike(post.id)} className=\"like-button\">\r\n                                ❤️ {post.likes_count} Likes\r\n                            </button>\r\n\r\n                            <div className=\"comment-input\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Add a comment\"\r\n                                    value={currentComment[post.id] || ''}\r\n                                    onChange={(e) =>\r\n                                        handleCommentInput(post.id, e.target.value)\r\n                                    }\r\n                                />\r\n                                <button\r\n                                    onClick={() => handleAddComment(post.id)}\r\n                                    className=\"comment-button\"\r\n                                >\r\n                                    Comment\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"comments-section\">\r\n                            <h4>Comments:</h4>\r\n                            {post.comments.length === 0 ? (\r\n                                <p>No comments yet.</p>\r\n                            ) : (\r\n                                post.comments.map((comment, index) => (\r\n                                    <div key={index} className=\"comment\">\r\n                                        <strong>{comment.user}</strong>: {comment.comment}\r\n                                    </div>\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostViewPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}