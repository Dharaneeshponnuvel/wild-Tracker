{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charan\\\\Downloads\\\\demo\\\\demo\\\\my-react-app\\\\src\\\\components\\\\Viewpost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PostViewPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostViewPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newComment, setNewComment] = useState('');\n\n  // Fetch posts from the backend\n  useEffect(() => {\n    fetch('http://localhost:5000/api/posts').then(res => res.json()).then(data => setPosts(data)).catch(err => console.error(err));\n  }, []);\n\n  // Handle like button click\n  const handleLike = postId => {\n    fetch(`http://localhost:5000/api/posts/${postId}/like`, {\n      method: 'POST'\n    }).then(res => res.json()).then(updatedPost => {\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        likes_count: updatedPost.likes\n      } : post));\n    });\n  };\n\n  // Handle adding a comment\n  const handleAddComment = postId => {\n    fetch(`http://localhost:5000/api/posts/${postId}/comment`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: 'currentUser',\n        comment: newComment\n      })\n    }).then(res => res.json()).then(newComment => {\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        comments: [...post.comments, newComment]\n      } : post));\n      setNewComment('');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-view-page\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image_url,\n        alt: post.description,\n        className: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLike(post.id),\n          children: [\"\\u2764\\uFE0F \", post.likes_count, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a comment\",\n            value: newComment,\n            onChange: e => setNewComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddComment(post.id),\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [comment.user, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), \" \", comment.comment]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(PostViewPage, \"dRUr+zsa4qogovh3Ru+OnV2IyME=\");\n_c = PostViewPage;\nexport default PostViewPage;\nvar _c;\n$RefreshReg$(_c, \"PostViewPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PostViewPage","_s","posts","setPosts","newComment","setNewComment","fetch","then","res","json","data","catch","err","console","error","handleLike","postId","method","updatedPost","prevPosts","map","post","id","likes_count","likes","handleAddComment","headers","body","JSON","stringify","username","comment","comments","className","children","src","image_url","alt","description","fileName","_jsxFileName","lineNumber","columnNumber","location","onClick","type","placeholder","value","onChange","e","target","index","user","_c","$RefreshReg$"],"sources":["C:/Users/Charan/Downloads/demo/demo/my-react-app/src/components/Viewpost.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PostViewPage.css';\r\n\r\nconst PostViewPage = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    // Fetch posts from the backend\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/posts')\r\n            .then((res) => res.json())\r\n            .then((data) => setPosts(data))\r\n            .catch((err) => console.error(err));\r\n    }, []);\r\n\r\n    // Handle like button click\r\n    const handleLike = (postId) => {\r\n        fetch(`http://localhost:5000/api/posts/${postId}/like`, {\r\n            method: 'POST',\r\n        })\r\n            .then((res) => res.json())\r\n            .then((updatedPost) => {\r\n                setPosts((prevPosts) =>\r\n                    prevPosts.map((post) =>\r\n                        post.id === postId ? { ...post, likes_count: updatedPost.likes } : post\r\n                    )\r\n                );\r\n            });\r\n    };\r\n\r\n    // Handle adding a comment\r\n    const handleAddComment = (postId) => {\r\n        fetch(`http://localhost:5000/api/posts/${postId}/comment`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username: 'currentUser', comment: newComment }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((newComment) => {\r\n                setPosts((prevPosts) =>\r\n                    prevPosts.map((post) =>\r\n                        post.id === postId\r\n                            ? { ...post, comments: [...post.comments, newComment] }\r\n                            : post\r\n                    )\r\n                );\r\n                setNewComment('');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"post-view-page\">\r\n            {posts.map((post) => (\r\n                <div key={post.id} className=\"post\">\r\n                    <img src={post.image_url} alt={post.description} className=\"post-image\" />\r\n                    <div className=\"post-details\">\r\n                        <p>{post.description}</p>\r\n                        <p>{post.location}</p>\r\n                    </div>\r\n                    <div className=\"post-actions\">\r\n                        <button onClick={() => handleLike(post.id)}>❤️ {post.likes_count} Likes</button>\r\n                        <div>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Add a comment\"\r\n                                value={newComment}\r\n                                onChange={(e) => setNewComment(e.target.value)}\r\n                            />\r\n                            <button onClick={() => handleAddComment(post.id)}>Comment</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"comments\">\r\n                        <h4>Comments:</h4>\r\n                        {post.comments.map((comment, index) => (\r\n                            <p key={index}>\r\n                                <strong>{comment.user}:</strong> {comment.comment}\r\n                            </p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostViewPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}