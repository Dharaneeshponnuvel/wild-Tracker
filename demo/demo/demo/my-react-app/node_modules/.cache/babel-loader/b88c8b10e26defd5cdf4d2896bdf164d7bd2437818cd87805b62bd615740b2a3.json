{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charan\\\\Downloads\\\\demo\\\\demo\\\\my-react-app\\\\src\\\\components\\\\MapPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleMap, Marker, InfoWindow, useJsApiLoader } from \"@react-google-maps/api\";\n\n// Define your animal locations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animalLocations = [{\n  name: \"Bengal Tiger\",\n  coordinates: {\n    lat: 21.2945,\n    lng: 79.4082\n  }\n}, {\n  name: \"Asian Elephant\",\n  coordinates: {\n    lat: 11.586,\n    lng: 77.8809\n  }\n}, {\n  name: \"Indian Rhino\",\n  coordinates: {\n    lat: 26.095,\n    lng: 93.3656\n  }\n}\n// Add more animal locations as needed\n];\nconst containerStyle = {\n  width: \"100%\",\n  height: \"600px\"\n};\nconst center = {\n  lat: 20.5937,\n  // Center of India (adjust as needed)\n  lng: 78.9629\n};\nconst App = () => {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\" // Replace with your actual API key\n  });\n  const [selectedAnimal, setSelectedAnimal] = useState(null);\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Animal Locations on Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 5,\n      children: [animalLocations.map((animal, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: animal.coordinates,\n        onClick: () => setSelectedAnimal(animal)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)), selectedAnimal && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: selectedAnimal.coordinates,\n        onCloseClick: () => setSelectedAnimal(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedAnimal.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Coordinates: \", selectedAnimal.coordinates.lat, \", \", selectedAnimal.coordinates.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"dYtbyDQD/MQ3ppk380jRpOAF4dc=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleMap","Marker","InfoWindow","useJsApiLoader","jsxDEV","_jsxDEV","animalLocations","name","coordinates","lat","lng","containerStyle","width","height","center","App","_s","isLoaded","googleMapsApiKey","selectedAnimal","setSelectedAnimal","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","map","animal","index","position","onClick","onCloseClick","_c","$RefreshReg$"],"sources":["C:/Users/Charan/Downloads/demo/demo/my-react-app/src/components/MapPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleMap, Marker, InfoWindow, useJsApiLoader } from \"@react-google-maps/api\";\r\n\r\n// Define your animal locations\r\nconst animalLocations = [\r\n    { name: \"Bengal Tiger\", coordinates: { lat: 21.2945, lng: 79.4082 } },\r\n    { name: \"Asian Elephant\", coordinates: { lat: 11.586, lng: 77.8809 } },\r\n    { name: \"Indian Rhino\", coordinates: { lat: 26.095, lng: 93.3656 } },\r\n    // Add more animal locations as needed\r\n];\r\n\r\nconst containerStyle = {\r\n    width: \"100%\",\r\n    height: \"600px\",\r\n};\r\n\r\nconst center = {\r\n    lat: 20.5937, // Center of India (adjust as needed)\r\n    lng: 78.9629,\r\n};\r\n\r\nconst App = () => {\r\n    const { isLoaded } = useJsApiLoader({\r\n        googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\", // Replace with your actual API key\r\n    });\r\n\r\n    const [selectedAnimal, setSelectedAnimal] = useState(null);\r\n\r\n    if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Animal Locations on Map</h1>\r\n            <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={5}>\r\n                {animalLocations.map((animal, index) => (\r\n                    <Marker\r\n                        key={index}\r\n                        position={animal.coordinates}\r\n                        onClick={() => setSelectedAnimal(animal)}\r\n                    />\r\n                ))}\r\n                {selectedAnimal && (\r\n                    <InfoWindow\r\n                        position={selectedAnimal.coordinates}\r\n                        onCloseClick={() => setSelectedAnimal(null)}\r\n                    >\r\n                        <div>\r\n                            <h2>{selectedAnimal.name}</h2>\r\n                            <p>Coordinates: {selectedAnimal.coordinates.lat}, {selectedAnimal.coordinates.lng}</p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n            </GoogleMap>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}