{"ast":null,"code":"var _jsxFileName = \"D:\\\\ag lab\\\\demo\\\\my-react-app\\\\src\\\\components\\\\MapPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport './MapPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapPage = () => {\n  _s();\n  useEffect(() => {\n    const map = new maplibregl.Map({\n      container: 'map',\n      // ID of the container\n      style: 'https://demotiles.maplibre.org/style.json',\n      // URL of the style\n      center: [78.9629, 20.5937],\n      // Center of the map (India)\n      zoom: 5 // Initial zoom level\n    });\n    const animalLocations = [{\n      name: \"Bengal Tiger\",\n      coordinates: [79.4082, 21.2945],\n      imageUrl: \"https://example.com/bengal_tiger.jpg\"\n    }, {\n      name: \"Asian Elephant\",\n      coordinates: [77.8809, 11.5860],\n      imageUrl: \"https://example.com/asian_elephant.jpg\"\n    }, {\n      name: \"Indian Rhino\",\n      coordinates: [93.3656, 26.0950],\n      imageUrl: \"https://example.com/indian_rhino.jpg\"\n    }, {\n      name: \"Snow Leopard\",\n      coordinates: [78.7320, 32.6512],\n      imageUrl: \"https://example.com/snow_leopard.jpg\"\n    }, {\n      name: \"Great Indian Bustard\",\n      coordinates: [70.7211, 26.0960],\n      imageUrl: \"https://example.com/great_indian_bustard.jpg\"\n    }];\n\n    // Add markers after the map has loaded\n    map.on('load', () => {\n      const bounds = new maplibregl.LngLatBounds();\n\n      // Add markers for each animal location\n      animalLocations.forEach(animal => {\n        const marker = new maplibregl.Marker().setLngLat(animal.coordinates).setPopup(new maplibregl.Popup().setHTML(`\n                        <strong>${animal.name}</strong><br>\n                        <img src=\"${animal.imageUrl}\" alt=\"${animal.name}\" style=\"width: 100px; height:auto;\">\n                    `)).addTo(map);\n\n        // Extend the bounds to include this marker's coordinates\n        bounds.extend(animal.coordinates);\n      });\n\n      // Fit the map to the bounds of the markers\n      map.fitBounds(bounds, {\n        padding: 20\n      });\n    });\n    map.on('error', e => {\n      console.error('Map error:', e);\n    });\n    return () => map.remove(); // Cleanup on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '100vh',\n      width: '100vw'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","maplibregl","jsxDEV","_jsxDEV","MapPage","_s","map","Map","container","style","center","zoom","animalLocations","name","coordinates","imageUrl","on","bounds","LngLatBounds","forEach","animal","marker","Marker","setLngLat","setPopup","Popup","setHTML","addTo","extend","fitBounds","padding","e","console","error","remove","id","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ag lab/demo/my-react-app/src/components/MapPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport maplibregl from 'maplibre-gl';\r\nimport './MapPage.css';\r\n\r\nconst MapPage = () => {\r\n    useEffect(() => {\r\n        const map = new maplibregl.Map({\r\n            container: 'map', // ID of the container\r\n            style: 'https://demotiles.maplibre.org/style.json', // URL of the style\r\n            center: [78.9629, 20.5937], // Center of the map (India)\r\n            zoom: 5, // Initial zoom level\r\n        });\r\n\r\n        const animalLocations = [\r\n            {\r\n                name: \"Bengal Tiger\",\r\n                coordinates: [79.4082, 21.2945],\r\n                imageUrl: \"https://example.com/bengal_tiger.jpg\",\r\n            },\r\n            {\r\n                name: \"Asian Elephant\",\r\n                coordinates: [77.8809, 11.5860],\r\n                imageUrl: \"https://example.com/asian_elephant.jpg\",\r\n            },\r\n            {\r\n                name: \"Indian Rhino\",\r\n                coordinates: [93.3656, 26.0950],\r\n                imageUrl: \"https://example.com/indian_rhino.jpg\",\r\n            },\r\n            {\r\n                name: \"Snow Leopard\",\r\n                coordinates: [78.7320, 32.6512],\r\n                imageUrl: \"https://example.com/snow_leopard.jpg\",\r\n            },\r\n            {\r\n                name: \"Great Indian Bustard\",\r\n                coordinates: [70.7211, 26.0960],\r\n                imageUrl: \"https://example.com/great_indian_bustard.jpg\",\r\n            },\r\n        ];\r\n\r\n        // Add markers after the map has loaded\r\n        map.on('load', () => {\r\n            const bounds = new maplibregl.LngLatBounds();\r\n\r\n            // Add markers for each animal location\r\n            animalLocations.forEach(animal => {\r\n                const marker = new maplibregl.Marker()\r\n                    .setLngLat(animal.coordinates)\r\n                    .setPopup(new maplibregl.Popup().setHTML(`\r\n                        <strong>${animal.name}</strong><br>\r\n                        <img src=\"${animal.imageUrl}\" alt=\"${animal.name}\" style=\"width: 100px; height:auto;\">\r\n                    `))\r\n                    .addTo(map);\r\n\r\n                // Extend the bounds to include this marker's coordinates\r\n                bounds.extend(animal.coordinates);\r\n            });\r\n\r\n            // Fit the map to the bounds of the markers\r\n            map.fitBounds(bounds, { padding: 20 });\r\n        });\r\n\r\n        map.on('error', (e) => {\r\n            console.error('Map error:', e);\r\n        });\r\n\r\n        return () => map.remove(); // Cleanup on component unmount\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"map\" style={{ height: '100vh', width: '100vw' }} />\r\n    );\r\n};\r\n\r\nexport default MapPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClBL,SAAS,CAAC,MAAM;IACZ,MAAMM,GAAG,GAAG,IAAIL,UAAU,CAACM,GAAG,CAAC;MAC3BC,SAAS,EAAE,KAAK;MAAE;MAClBC,KAAK,EAAE,2CAA2C;MAAE;MACpDC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MAAE;MAC5BC,IAAI,EAAE,CAAC,CAAE;IACb,CAAC,CAAC;IAEF,MAAMC,eAAe,GAAG,CACpB;MACIC,IAAI,EAAE,cAAc;MACpBC,WAAW,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MAC/BC,QAAQ,EAAE;IACd,CAAC,EACD;MACIF,IAAI,EAAE,gBAAgB;MACtBC,WAAW,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MAC/BC,QAAQ,EAAE;IACd,CAAC,EACD;MACIF,IAAI,EAAE,cAAc;MACpBC,WAAW,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MAC/BC,QAAQ,EAAE;IACd,CAAC,EACD;MACIF,IAAI,EAAE,cAAc;MACpBC,WAAW,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MAC/BC,QAAQ,EAAE;IACd,CAAC,EACD;MACIF,IAAI,EAAE,sBAAsB;MAC5BC,WAAW,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MAC/BC,QAAQ,EAAE;IACd,CAAC,CACJ;;IAED;IACAT,GAAG,CAACU,EAAE,CAAC,MAAM,EAAE,MAAM;MACjB,MAAMC,MAAM,GAAG,IAAIhB,UAAU,CAACiB,YAAY,CAAC,CAAC;;MAE5C;MACAN,eAAe,CAACO,OAAO,CAACC,MAAM,IAAI;QAC9B,MAAMC,MAAM,GAAG,IAAIpB,UAAU,CAACqB,MAAM,CAAC,CAAC,CACjCC,SAAS,CAACH,MAAM,CAACN,WAAW,CAAC,CAC7BU,QAAQ,CAAC,IAAIvB,UAAU,CAACwB,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC;AAC7D,kCAAkCN,MAAM,CAACP,IAAI;AAC7C,oCAAoCO,MAAM,CAACL,QAAQ,UAAUK,MAAM,CAACP,IAAI;AACxE,qBAAqB,CAAC,CAAC,CACFc,KAAK,CAACrB,GAAG,CAAC;;QAEf;QACAW,MAAM,CAACW,MAAM,CAACR,MAAM,CAACN,WAAW,CAAC;MACrC,CAAC,CAAC;;MAEF;MACAR,GAAG,CAACuB,SAAS,CAACZ,MAAM,EAAE;QAAEa,OAAO,EAAE;MAAG,CAAC,CAAC;IAC1C,CAAC,CAAC;IAEFxB,GAAG,CAACU,EAAE,CAAC,OAAO,EAAGe,CAAC,IAAK;MACnBC,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEF,CAAC,CAAC;IAClC,CAAC,CAAC;IAEF,OAAO,MAAMzB,GAAG,CAAC4B,MAAM,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI/B,OAAA;IAAKgC,EAAE,EAAC,KAAK;IAAC1B,KAAK,EAAE;MAAE2B,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEpE,CAAC;AAACpC,EAAA,CArEID,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AAuEb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}